/**
 * IDMEF Package for JAVA
 * 
 * License Notice
 * 
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 * 
 * Copyright Notice
 *
 * Edits and bug-fixes:
 * Copyright (c) 2017 Mattia Zago. All rights reserved.
 *
 * Auto-generated files:
 * This file was generated by the JavaTM Architecture for XML Binding(JAXB)
 * Reference Implementation, v2.2.8-b130911.1802
 * See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
 *
 * IDMEF Schema:
 * Copyright (c) 2008 IETF Trust and the persons identified as the
 * IDMEF document authors. All rights reserved.
 * See https://tools.ietf.org/html/bcp78 for the complete license
 * document.
 *
 * @author Mattia Zago - dev [at] zagomattia [dot] it
 * @version 0.0.1
 * @since 14/09/2017
 */

package org.iana.idmef;

import java.io.Serializable;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for file-permission.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;simpleType name="file-permission"&gt;
 *
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *
 *     &lt;enumeration value="noAccess"/&gt;
 *     &lt;enumeration value="read"/&gt;
 *     &lt;enumeration value="write"/&gt;
 *     &lt;enumeration value="execute"/&gt;
 *     &lt;enumeration value="search"/&gt;
 *     &lt;enumeration value="delete"/&gt;
 *     &lt;enumeration value="executeAs"/&gt;
 *     &lt;enumeration value="changePermissions"/&gt;
 *     &lt;enumeration value="takeOwnership"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "file-permission")
@XmlEnum
public enum FilePermission implements Serializable {
    
    @XmlEnumValue("noAccess")
    NO_ACCESS("noAccess"), @XmlEnumValue("read")
    READ("read"), @XmlEnumValue("write")
    WRITE("write"), @XmlEnumValue("execute")
    EXECUTE("execute"), @XmlEnumValue("search")
    SEARCH("search"), @XmlEnumValue("delete")
    DELETE("delete"), @XmlEnumValue("executeAs")
    EXECUTE_AS("executeAs"), @XmlEnumValue("changePermissions")
    CHANGE_PERMISSIONS("changePermissions"), @XmlEnumValue("takeOwnership")
    TAKE_OWNERSHIP("takeOwnership");
    private final String value;
    
    FilePermission(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static FilePermission fromValue(String v) {
        for (FilePermission c : FilePermission.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
    
}
