//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.14 at 11:09:23 AM CEST 
//


package org.iana.idmef;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for file-permission.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="file-permission">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="noAccess"/>
 *     &lt;enumeration value="read"/>
 *     &lt;enumeration value="write"/>
 *     &lt;enumeration value="execute"/>
 *     &lt;enumeration value="search"/>
 *     &lt;enumeration value="delete"/>
 *     &lt;enumeration value="executeAs"/>
 *     &lt;enumeration value="changePermissions"/>
 *     &lt;enumeration value="takeOwnership"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "file-permission")
@XmlEnum
public enum FilePermission {

    @XmlEnumValue("noAccess")
    NO_ACCESS("noAccess"),
    @XmlEnumValue("read")
    READ("read"),
    @XmlEnumValue("write")
    WRITE("write"),
    @XmlEnumValue("execute")
    EXECUTE("execute"),
    @XmlEnumValue("search")
    SEARCH("search"),
    @XmlEnumValue("delete")
    DELETE("delete"),
    @XmlEnumValue("executeAs")
    EXECUTE_AS("executeAs"),
    @XmlEnumValue("changePermissions")
    CHANGE_PERMISSIONS("changePermissions"),
    @XmlEnumValue("takeOwnership")
    TAKE_OWNERSHIP("takeOwnership");
    private final String value;

    FilePermission(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FilePermission fromValue(String v) {
        for (FilePermission c: FilePermission.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
