//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.14 at 11:09:23 AM CEST 
//


package org.iana.idmef;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for node-category.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="node-category">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="unknown"/>
 *     &lt;enumeration value="ads"/>
 *     &lt;enumeration value="afs"/>
 *     &lt;enumeration value="coda"/>
 *     &lt;enumeration value="dfs"/>
 *     &lt;enumeration value="dns"/>
 *     &lt;enumeration value="hosts"/>
 *     &lt;enumeration value="kerberos"/>
 *     &lt;enumeration value="nds"/>
 *     &lt;enumeration value="nis"/>
 *     &lt;enumeration value="nisplus"/>
 *     &lt;enumeration value="nt"/>
 *     &lt;enumeration value="wfw"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "node-category")
@XmlEnum
public enum NodeCategory {

    @XmlEnumValue("unknown")
    UNKNOWN("unknown"),
    @XmlEnumValue("ads")
    ADS("ads"),
    @XmlEnumValue("afs")
    AFS("afs"),
    @XmlEnumValue("coda")
    CODA("coda"),
    @XmlEnumValue("dfs")
    DFS("dfs"),
    @XmlEnumValue("dns")
    DNS("dns"),
    @XmlEnumValue("hosts")
    HOSTS("hosts"),
    @XmlEnumValue("kerberos")
    KERBEROS("kerberos"),
    @XmlEnumValue("nds")
    NDS("nds"),
    @XmlEnumValue("nis")
    NIS("nis"),
    @XmlEnumValue("nisplus")
    NISPLUS("nisplus"),
    @XmlEnumValue("nt")
    NT("nt"),
    @XmlEnumValue("wfw")
    WFW("wfw");
    private final String value;

    NodeCategory(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NodeCategory fromValue(String v) {
        for (NodeCategory c: NodeCategory.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
