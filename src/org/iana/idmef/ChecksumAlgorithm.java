//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.14 at 11:09:23 AM CEST 
//


package org.iana.idmef;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for checksum-algorithm.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="checksum-algorithm">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="MD4"/>
 *     &lt;enumeration value="MD5"/>
 *     &lt;enumeration value="SHA1"/>
 *     &lt;enumeration value="SHA2-256"/>
 *     &lt;enumeration value="SHA2-384"/>
 *     &lt;enumeration value="SHA2-512"/>
 *     &lt;enumeration value="CRC-32"/>
 *     &lt;enumeration value="Haval"/>
 *     &lt;enumeration value="Tiger"/>
 *     &lt;enumeration value="Gost"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "checksum-algorithm")
@XmlEnum
public enum ChecksumAlgorithm {

    @XmlEnumValue("MD4")
    MD_4("MD4"),
    @XmlEnumValue("MD5")
    MD_5("MD5"),
    @XmlEnumValue("SHA1")
    SHA_1("SHA1"),
    @XmlEnumValue("SHA2-256")
    SHA_2_256("SHA2-256"),
    @XmlEnumValue("SHA2-384")
    SHA_2_384("SHA2-384"),
    @XmlEnumValue("SHA2-512")
    SHA_2_512("SHA2-512"),
    @XmlEnumValue("CRC-32")
    CRC_32("CRC-32"),
    @XmlEnumValue("Haval")
    HAVAL("Haval"),
    @XmlEnumValue("Tiger")
    TIGER("Tiger"),
    @XmlEnumValue("Gost")
    GOST("Gost");
    private final String value;

    ChecksumAlgorithm(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ChecksumAlgorithm fromValue(String v) {
        for (ChecksumAlgorithm c: ChecksumAlgorithm.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
